@page "/importar-tareas"
@using WorkFlow_SIG10._1.Data
@using WorkFlow_SIG10._1.Models
@using WorkFlow_SIG10._1.Services
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject XmlImportService ImportService
@inject NavigationManager NavigationManager
@inject ILogger<ImportarTareas> Logger

<PageTitle>Importar Tareas desde XML</PageTitle>

<h3>Importar Tareas desde MS Project (XML)</h3>
<p>
    Esta herramienta permite cargar un archivo XML exportado desde Microsoft Project
    para importar la estructura de tareas a un proyecto existente en el sistema.
</p>

<div class="card">
    <div class="card-body">
        <div class="mb-3">
            <label for="project-select" class="form-label">1. Seleccione el Proyecto de Destino:</label>
            <select id="project-select" class="form-select" @bind="selectedProjectId">
                <option value="0">-- Elija un proyecto --</option>
                @if (projects != null)
                {
                    @foreach (var project in projects)
                    {
                        <option value="@project.ProyectoID">@project.NombreObra</option>
                    }
                }
            </select>
        </div>

        <div class="mb-3">
            <label for="file-input" class="form-label">2. Seleccione el Archivo XML:</label>
            <InputFile id="file-input" OnChange="HandleFileSelected" class="form-control" />
        </div>

        <button class="btn btn-primary" @onclick="HandleImport" disabled="@(isProcessing || selectedProjectId == 0 || file == null)">
            @if (isProcessing)
            {
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                <span> Importando...</span>
            }
            else
            {
                <span><i class="fas fa-file-import"></i> Importar Tareas</span>
            }
        </button>

        @if (!string.IsNullOrEmpty(statusMessage))
        {
            <div class="mt-3 alert @statusMessageClass">
                @statusMessage
            </div>
        }
    </div>
</div>

@code {
    private List<Proyecto> projects;
    private int selectedProjectId;
    private IBrowserFile file;
    private string statusMessage;
    private string statusMessageClass;
    private bool isProcessing = false;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        projects = await context.Proyectos.OrderBy(p => p.NombreObra).ToListAsync();
    }

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        // Limite de 20 MB para el archivo
        if (e.File.Size > 20 * 1024 * 1024)
        {
            statusMessage = "El archivo es demasiado grande. El límite es de 20 MB.";
            statusMessageClass = "alert-danger";
            file = null;
        }
        else
        {
            file = e.File;
            statusMessage = $"Archivo seleccionado: {file.Name}";
            statusMessageClass = "alert-info";
        }
    }

    private async Task HandleImport()
    {
        if (selectedProjectId == 0 || file == null)
        {
            statusMessage = "Por favor, seleccione un proyecto y un archivo.";
            statusMessageClass = "alert-danger";
            return;
        }

        isProcessing = true;
        statusMessage = "Iniciando importación... No cierre esta página.";
        statusMessageClass = "alert-info";

        try
        {
            // Abrir el stream del archivo para pasarlo al servicio
            // Limite de 20 MB para el stream
            await using var fileStream = file.OpenReadStream(maxAllowedSize: 20 * 1024 * 1024);
            
            await ImportService.ImportarTareasDesdeXmlAsync(fileStream, selectedProjectId);
            
            statusMessage = "¡Importación completada con éxito!";
            statusMessageClass = "alert-success";
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error durante la importación del archivo XML.");
            statusMessage = $"Error durante la importación: {ex.Message}";
            statusMessageClass = "alert-danger";
        }
        finally
        {
            isProcessing = false;
        }
    }
}