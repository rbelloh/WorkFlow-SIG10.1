// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkFlow_SIG10._1.Data;

#nullable disable

namespace WorkFlow_SIG10._1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250901155233_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.Contrato", b =>
                {
                    b.Property<int>("ContratoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ContratoID"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaFirma")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProyectoID")
                        .HasColumnType("int");

                    b.Property<string>("TipoContrato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("ValorContrato")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ContratoID");

                    b.HasIndex("ProyectoID");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.ControlCalidad", b =>
                {
                    b.Property<int>("ControlID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ControlID"));

                    b.Property<string>("DescripcionInspeccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProyectoID")
                        .HasColumnType("int");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ControlID");

                    b.HasIndex("ProyectoID");

                    b.ToTable("ControlesCalidad");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.IncidenciaSSMA", b =>
                {
                    b.Property<int>("IncidenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IncidenciaID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProyectoID")
                        .HasColumnType("int");

                    b.Property<string>("Severidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IncidenciaID");

                    b.HasIndex("ProyectoID");

                    b.ToTable("IncidenciasSSMA");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.Inventario", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MaterialID"));

                    b.Property<int>("CantidadStock")
                        .HasColumnType("int");

                    b.Property<string>("NombreMaterial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.Property<string>("UbicacionBodega")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MaterialID");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.OficinaTecnica", b =>
                {
                    b.Property<int>("DocumentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DocumentoID"));

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreDocumento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProyectoID")
                        .HasColumnType("int");

                    b.Property<string>("RutaArchivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("DocumentoID");

                    b.HasIndex("ProyectoID");

                    b.ToTable("OficinasTecnicas");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.Proyecto", b =>
                {
                    b.Property<int>("ProyectoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProyectoID"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaFinEstimada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreProyecto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PresupuestoTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProyectoID");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("ContraseñaHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.Contrato", b =>
                {
                    b.HasOne("WorkFlow_SIG10._1.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.ControlCalidad", b =>
                {
                    b.HasOne("WorkFlow_SIG10._1.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.IncidenciaSSMA", b =>
                {
                    b.HasOne("WorkFlow_SIG10._1.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.OficinaTecnica", b =>
                {
                    b.HasOne("WorkFlow_SIG10._1.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });
#pragma warning restore 612, 618
        }
    }
}
