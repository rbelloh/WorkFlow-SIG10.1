// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkFlow_SIG10._1.Data;

#nullable disable

namespace WorkFlow_SIG10._1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250903172612_AddDetailedProjectFields")]
    partial class AddDetailedProjectFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.Contrato", b =>
                {
                    b.Property<int>("ContratoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ContratoID"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaFirma")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProyectoID")
                        .HasColumnType("int");

                    b.Property<string>("TipoContrato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("ValorContrato")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ContratoID");

                    b.HasIndex("ProyectoID");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.ControlCalidad", b =>
                {
                    b.Property<int>("ControlID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ControlID"));

                    b.Property<string>("DescripcionInspeccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProyectoID")
                        .HasColumnType("int");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ControlID");

                    b.HasIndex("ProyectoID");

                    b.ToTable("ControlesCalidad");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.IncidenciaSSMA", b =>
                {
                    b.Property<int>("IncidenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IncidenciaID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProyectoID")
                        .HasColumnType("int");

                    b.Property<string>("Severidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IncidenciaID");

                    b.HasIndex("ProyectoID");

                    b.ToTable("IncidenciasSSMA");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.Inventario", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MaterialID"));

                    b.Property<int>("CantidadStock")
                        .HasColumnType("int");

                    b.Property<string>("NombreMaterial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.Property<string>("UbicacionBodega")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MaterialID");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.OficinaTecnica", b =>
                {
                    b.Property<int>("DocumentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DocumentoID"));

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreDocumento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProyectoID")
                        .HasColumnType("int");

                    b.Property<string>("RutaArchivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("DocumentoID");

                    b.HasIndex("ProyectoID");

                    b.ToTable("OficinasTecnicas");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.Proyecto", b =>
                {
                    b.Property<int>("ProyectoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProyectoID"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CiudadEmpresaEjecutora")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CiudadEmpresaMandante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CodigoObra")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DireccionEmpresaEjecutora")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DireccionEmpresaMandante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaInicioProyecto")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaTerminoProyecto")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdEmpresaEjecutora")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdEmpresaMandante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdRepresentanteLegalEjecutora")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdRepresentanteLegalMandante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LogoEmpresaEjecutoraPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LogoEmpresaMandantePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreAdministradorObraEjecutora")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreAdministradorObraMandante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreEmpresaEjecutora")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreEmpresaMandante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreObra")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreRepresentanteLegalEjecutora")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreRepresentanteLegalMandante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProyectoID");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Dependencia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("NumeroIdentificacion")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("WorkFlow_SIG10._1.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("WorkFlow_SIG10._1.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkFlow_SIG10._1.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("WorkFlow_SIG10._1.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.Contrato", b =>
                {
                    b.HasOne("WorkFlow_SIG10._1.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.ControlCalidad", b =>
                {
                    b.HasOne("WorkFlow_SIG10._1.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.IncidenciaSSMA", b =>
                {
                    b.HasOne("WorkFlow_SIG10._1.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("WorkFlow_SIG10._1.Models.OficinaTecnica", b =>
                {
                    b.HasOne("WorkFlow_SIG10._1.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });
#pragma warning restore 612, 618
        }
    }
}
