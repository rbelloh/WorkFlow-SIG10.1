@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<WorkFlow_SIG10._1.Models.Usuario> UserManager
@using Microsoft.AspNetCore.Identity

<div class="nav-container">
    <div class="nav-scrollable">

        <AuthorizeView>
            <Authorized>
                <div class="user-profile">
                    <div class="user-icon">
                        <i class="fas fa-user"></i>
                    </div>
                    <div class="user-name">
                        <span>@firstName</span>
                    </div>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="user-profile">
                    <div class="user-icon">
                        <i class="fas fa-user"></i>
                    </div>
                    <div class="user-name">
                        <span>Invitado</span>
                    </div>
                </div>
            </NotAuthorized>
        </AuthorizeView>

        <nav class="flex-column">
            <div class="nav-item">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <i class="fas fa-home" aria-hidden="true"></i> <span class="nav-text">Inicio</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="proyectos">
                    <i class="fas fa-project-diagram" aria-hidden="true"></i> <span class="nav-text">Proyectos</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="contratos">
                    <i class="fas fa-file-signature" aria-hidden="true"></i> <span class="nav-text">Recursos Humanos</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="inventario">
                    <i class="fas fa-boxes" aria-hidden="true"></i> <span class="nav-text">Bodega</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="incidencias-ssma">
                    <i class="fas fa-exclamation-triangle" aria-hidden="true"></i> <span class="nav-text">Seguridad</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="control-calidad">
                    <i class="fas fa-check-circle" aria-hidden="true"></i> <span class="nav-text">Control de Calidad</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="oficina-tecnica">
                    <i class="fas fa-drafting-compass" aria-hidden="true"></i> <span class="nav-text">Oficina Técnica</span>
                </NavLink>
            </div>

            <div class="nav-separator"></div>

            <div class="nav-item">
                <NavLink class="nav-link" href="logout">
                    <i class="fas fa-sign-out-alt" aria-hidden="true"></i> <span class="nav-text">Cerrar sesión</span>
                </NavLink>
            </div>
        </nav>
    </div>
    <div class="nav-footer">
        <button class="btn nav-toggle-btn" @onclick="ToggleNavMenu">
            <i class="fas fa-angle-double-left"></i>
        </button>
    </div>
</div>

@code {
    [Parameter]
    public bool IsPinned { get; set; }

    [Parameter]
    public EventCallback<bool> OnToggle { get; set; }

    private string firstName = "Cargando...";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var appUser = await UserManager.GetUserAsync(user);
            if (appUser != null)
            {
                firstName = appUser.Nombre;
            }
        }
    }

    private Task ToggleNavMenu()
    {
        return OnToggle.InvokeAsync(!IsPinned);
    }
}